library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.NUMERIC_std.all;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity stop_Watch is
port(
	en :in std_logic;		--StopWatchEn
	OnOffToggle : in std_logic;	--Dekey2
	Clr : in std_logic;		--Dekey3
	clk : in std_logic;			--10ms_Clk
	OUT_MSmS : out std_logic_vector (23 downto 0)		-- H10, H1, M10, M1 : real time
	);
end stop_watch;

architecture STW of stop_Watch is

	component Nbits_Mode is
	generic( N : integer );
	port(
		clk : in std_logic;			--	Input - DeKey1 
		M : out std_logic_vector (N-1 downto 0)	--Mode (00 01 10 11)
		);
	end component;
	
	signal OnOff : std_logic;
	signal Md : std_logic_vector (1 downto 0);
	signal M10, M1, S10, S1, mS100, mS10 : std_logic_vector (3 downto 0);				--real time
	signal en_OnOffToggle : std_logic;
	signal en_Clr : std_logic;
begin
en_Clr <= clr and en; 
en_OnOffToggle <= en and OnOffToggle;
sel_OnOff : Nbits_Mode generic map (1) port map(en_OnOffToggle, Md);

OnOff <= Md(0);								-- initial '0': Minute 

flowtime : process(clk)						-- 10mS_clk
variable MM10, MM1, SS10, SS1, mSS100, mSS10  : std_logic_vector (3 downto 0) := "0000";	--time set
begin
	if(rising_edge(clk)) then
		if(OnOff = '1') then
			mSS10 := mSS10 + "0001";
			if(mSS10 = "1010") then
				mSS10 := "0000"; mSS100 := mSS100 + "0001";
				if(mSS100 = "0110")	then
					mSS100 := "0000"; SS1 := SS1 +"0001"; 
					if(SS1 = "1010") then
						SS1 := "0000"; SS10 := SS10 + "0001";
						if(SS10 = "0110")	then
							SS10 := "0000"; MM1 := MM1 +"0001";
							if(MM1 = "1010")	then
								MM1 := "0000"; MM10 := MM10 +"0001";
								if(MM10 = "0110") then
									MM10 := "0000";
								end if;
							end if;
						end if;
					end if;
				end if;
			end if;
		end if;
		if(en_Clr = '1') then
			MM10 := "0000"; MM1 := "0000"; SS10 := "0000"; SS1 := "0000"; mSS100 := "0000"; mSS10 := "0000";
		end if;
		M10 <= MM10; M1 <= MM1; S10 <= SS10; S1 <= SS1; mS100 <= mSS100; mS10 <= mSS10;
	end if;
end process flowtime;

OUT_MSmS(23 downto 20) <= M10;
OUT_MSmS(19 downto 16) <= M1;
OUT_MSmS(15 downto 12) <= S10;
OUT_MSmS(11 downto 8) <= S1;
OUT_MSmS(7 downto 4) <= mS100;
OUT_MSmS(3 downto 0) <= mS10;

end STW;
