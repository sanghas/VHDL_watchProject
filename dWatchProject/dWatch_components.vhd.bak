----------- File dWatch_components.vhd : ----------------
library ieee;
use IEEE.std_logic_1164.all;
---------------------------------------------------------
package dWatch_components is
	---------- DeBounce ------------
	component DeBounce is				-- key debounce
	port(
		In1,In2,In3,In4 : in std_logic;	--	Key1,2,3
		clk	:	in std_logic;			--	T = 10ms
		Out1,Out2,Out3,Out4 : out std_logic	--	DeKey1,2,3
		);
	end component;
	------------ Mode --------------
	component Nbits_Mode is
	generic( N : integer );
	port(
	clk : in std_logic;			--	Input - DeKey1 
	M : out std_logic_vector (N-1 downto 0)	--Mode (00 01 10 11)
	);
	end component;
	---------- Key_Seq_Gen ------------
	component Key_Seq_Gen is
	port(
		clk 	: in std_logic;	-- T=50ms
		KeyIn : in std_logic;	--	DeKey3
		KeyPulse	: out std_logic	--Inc_Pulse
		);
	end component;
	---------- testClk_Gen ------------
	component Clk_gen is
	generic(selinHz : integer );
	port(
		clk : in std_logic;		-- 2MHz
		outpulse1 : out std_logic;	-- T = 1sec 
		outpulse2 : out std_logic;	-- T = 10ms
		outpulse3 : out std_logic	-- T = 50ms
		);
	end component;
	---------- decoder2to4 ------------
	component decoder2to4 is
	port(
		d_in : in std_logic_vector (1 downto 0);
		out0, out1, out2, out3 : out std_logic
	);	
	end component;
	---------- Comparator ------------
	component Comparator is
	generic( bits : integer);
	port(
		In1, In2 : in std_logic_vector (bits-1 downto 0);
		comp : out std_logic
		);
	end component;
	---------- watch ------------
	component watch is
	port(
		en : in std_logic; 		--WatchSetEn
		In_HM : in std_logic_vector (15 downto 0);
		clk : in std_logic;		-- clk_1sec
		Ld_n : in std_logic;		-- watch_set data load key4
		Out_HMS :out std_logic_vector (23 downto 0)
		);
	end component;
	---------- watch_Set & Alarm_Set ------------
	component Set_Time is
	port(
		en : in std_logic; 		--WatchSetEn
		Toggle_HM : in std_logic; --rising_edge toggle  , Dekey 2
		clk : in std_logic;		--inc Pulse
		set_Time : in std_logic; 	--Dekey 4
		OUT_HM : out std_logic_vector (15 downto 0);		-- H10, H1, M10, M1 : real time
		OUT_Set_HM : out std_logic_vector (15 downto 0) -- H10, H1, M10, M1 : set time
		);
	end component;
	
	---------- stop_Watch ------------
	component stop_Watch is
	port(
		en :in std_logic;		--StopWatchEn
		OnOffToggle : in std_logic;	--Dekey2
		Clr : in std_logic;		--Dekey3
		clk : in std_logic;			--10ms_Clk
		OUT_MSmS : out std_logic_vector (23 downto 0)		-- H10, H1, M10, M1 : real time
		);
	end component;
	---------- MUX_4to1_24bit ------------
	component MUX_4to1_24bit is
	port(
		IN1, IN2, IN3, IN4 : in std_logic_vector (23 downto 0);
		sel : in std_logic_vector (1 downto 0);
		Out_Data : out std_logic_vector (23 downto 0)
		);
	end component;
	---------- Decoder_Block ------------
	component Decoder_Block is
	port(
		In_Data : in std_logic_vector (23 downto 0);
		Out5, Out4, Out3, Out2, Out1, Out0 : out std_logic_vector (6 downto 0)
		);
	end component;
end dWatch_components;